steps:
# Step 1: Build Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/frontend:$BUILD_ID', '.']
  env:
    - 'DOCKER_BUILDKIT=1'

# Step 2: Push image to GCR
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/frontend:$BUILD_ID']

# Step 3: Tag the image as 'latest'
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/$PROJECT_ID/frontend:$BUILD_ID', 'gcr.io/$PROJECT_ID/frontend:latest']

# Step 4: Push the 'latest' tag (optional but recommended if you're referencing 'latest' in deployment)
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/frontend:latest']

# Step 5: Deploy to GKE
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      gcloud container clusters get-credentials frontend-prod-cluster --region us-central1 --project $PROJECT_ID
      kubectl set image deployment/frontend frontend=gcr.io/$PROJECT_ID/frontend:$BUILD_ID
      kubectl apply -f k8s/prod/deployment.yaml
      kubectl apply -f k8s/prod/service.yaml
  env:
    - 'CLOUDSDK_COMPUTE_REGION=us-central1'
    - 'CLOUDSDK_CONTAINER_CLUSTER=frontend-prod-cluster'

images:
- gcr.io/$PROJECT_ID/frontend:$BUILD_ID