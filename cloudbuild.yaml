steps:
  # Install dependencies
  - name: 'node:18-alpine'
    entrypoint: npm
    args: ['install', '-g', 'pnpm']
  
  - name: 'node:18-alpine'
    entrypoint: pnpm
    args: ['install']

  # Run tests (if you have them)
  - name: 'node:18-alpine'
    entrypoint: pnpm
    args: ['test']
    allowFailure: true

  # Build the application
  - name: 'node:18-alpine'
    entrypoint: pnpm
    args: ['build']

  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/social-media-frontend:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/social-media-frontend:latest',
      '-f', 'deployment/Dockerfile',
      '.'
    ]

  # Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/social-media-frontend:$COMMIT_SHA']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/social-media-frontend:latest']

  # Update the deployment to use the new image
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/nginx-deployment'
      - 'nginx=gcr.io/$PROJECT_ID/social-media-frontend:$COMMIT_SHA'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=social-media-cluster-prod'

  # Verify the deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'rollout'
      - 'status'
      - 'deployment/nginx-deployment'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=social-media-cluster-prod'

images:
  - 'gcr.io/$PROJECT_ID/social-media-frontend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/social-media-frontend:latest'

timeout: '1800s' 